//  BASICS  ===============================================
.ff-form {
    display        : flex;
    position       : relative;
    width          : 100%;
    flex-direction : column;
}

.ff-form-unit {
    display        : flex;
    position       : relative;
    width          : 100%;
    flex-direction : column;
    align-items    : center;
    flex-wrap      : wrap;
    flex           : 1 1 auto;
}

.ff-input {
    position         : relative;
    width            : 100%;
    flex             : 1 1 auto;
    font-family      : $fontSans;
    background-color : $inputBGColor;
    border-radius    : 4px;
    padding          : 8px;
    box-shadow       : inset 0 1px 2px hsla( 0, 100%, 0, .08);
}

// :-webkit-autofill,
// :-webkit-autofill:hover,
// :-webkit-autofill:focus { box-shadow : 0 0 0 5000px transparent inset; }

input:-webkit-autofill,
select:-webkit-autofill,
textarea:-webkit-autofill {
    background-color : rgba(250, 255, 189, 0) !important;
    background-image : none !important;
    color            : rgb(0, 0, 0) !important;
}

.ff-form-unit > label,
.ff-form-unit-group > label {
    flex          : 1 0 100%;
    position      : relative;
    align-self    : flex-start;
    margin-bottom : 4px;
    color         : $colorShade;
    order         : -1;
}

.ff-input:required ~ label::before {
    position         : absolute;
    top              : 0;
    bottom           : 0;
    margin           : auto;
    left             : -8px;
    content          : " ";
    width            : 3px;
    height           : 70%;
    background-color : $colorRed;
    font-weight      : bold;
    color            : $colorRed;
}

.ff-form-unit label span,
.ff-form-unit-group label span {
    display     : inline-flex;
    font-size   : 80%;
    font-weight : normal;
    color       : $inputHelpColor;
    line-height : 1.4;
    opacity     : 0;
    transition  : opacity 0.2s;
}

.ff-form-unit > .ff-input:focus ~ label,
.ff-form-inline-group .ff-input:focus ~ label,
.ff-form-unit-group > .ff-input:focus ~ label { font-weight: bold; }

.ff-form-unit label > span::before,
.ff-form-unit-group label > span::before { content: "\0000a0\2022\0000a0"; }

.ff-form-unit .ff-input:focus ~ label > span,
.ff-form-unit .ff-input:active ~ label > span,
.ff-form-unit-group .ff-input:focus ~ label > span,
.ff-form-unit-group .ff-input:active ~ label > span { opacity : 1; }

.ff-form-unit .ff-input:not(:focus):not(:placeholder-shown) ~ label > span,
.ff-form-unit-group .ff-input:not(:focus):not(:placeholder-shown) ~ label > span { color : $inputHelpColor; }

.ff-form-inline-group,
.ff-form-unit-group {
    display        : flex;
    flex-direction : row;
    flex-wrap      : wrap;
    width          : 100%;
}

.ff-form-inline-group > .ff-form-unit,
.ff-form-unit-group > input {
    flex           : 1 1 0;
    flex-direction : row;
}

.ff-form-inline-group > label {
    flex : 1 1 100%;
    order: -1;
}

.ff-form-inline-group input { align-self : flex-end; }

.ff-form-inline-group > .ff-form-unit:not(:last-of-type) { margin-right : 24px; }

@media screen and (max-width: 520px) {

    .ff-form-inline-group:not(.retain-layout) > .ff-form-unit {
        flex          : 1 1 auto;
        margin-right  : 0 !important;
    }

    .ff-form-inline-group:not(.retain-layout) > .ff-form-unit:not(:last-child) { margin-bottom : 16px; }

}

.ff-form-inline-group > .ff-form-question {
    flex       : 1 0 0;
    align-self : flex-start;
}

.ff-form-inline-group > .ff-form-answers { flex : 3 1 0; }

.ff-form .ff-form-unit,
.ff-form .ff-form-unit-group,
.ff-form .ff-form-inline-group { margin-bottom : 40px; }

.ff-form-inline-group > .ff-form-unit,
.ff-form > .ff-form-unit:last-of-type:not(:only-of-type),
.ff-form > .ff-form-inline-group:last-of-type:not(:only-of-type) { margin-bottom : 0; }

.ff-form-answers * { margin-bottom: 8px; }

.ff-input.with-icon-left { padding-left : 40px; }

span.icon-left,
span.icon-right {
    position : absolute;
    bottom   : 6px;
    width    : 24px;
    height   : 24px;
}

span.icon-left  { left : 8px; }
span.icon-right {
    right   : 8px;
    opacity : 0.24;
}

span.icon-left svg,
span.icon-right svg {
    fill       : $inputIconFillColor;
    transition : all 0.2s;
}

.ff-input.with-icon-left:focus ~ span.icon-left svg { fill : $inputFocusIconFillColor; }

.ff-input.validate-this { padding-right : 24px; }

.ff-input:invalid:not(:focus):not(:placeholder-shown) { background-color : rgba($colorRed, 0.24); }

.ff-form-unit .ff-input:invalid:focus:not(:placeholder-shown) ~ label > span,
.ff-form-unit-group .ff-input:invalid:focus:not(:placeholder-shown) ~ label > span,
.ff-form-unit .ff-input:invalid:not(:focus):not(:placeholder-shown) ~ label > span,
.ff-form-unit-group .ff-input:invalid:not(:focus):not(:placeholder-shown) ~ label > span, { color : $inputHelpErrorColor; }

.ff-input.validate-this:focus ~ span.icon-right { opacity : 0.4; }
.ff-input.validate-this:valid ~ span.icon-right { opacity : 1; }

.ff-input.validate-this:valid ~ span.icon-right svg { fill : $colorGreen !important; }

.ff-input[type=password] { letter-spacing: 4px; }

textarea.ff-input {
    max-width : 100%;
    min-width : 100%;
    resize    : vertical;
}

.ff-form-unit-group .unit-prefix,
.ff-form-unit-group .unit-prefix select, {
    border-top-right-radius    : 0;
    border-bottom-right-radius : 0;
}

.ff-form-unit-group .unit-suffix,
.ff-form-unit-group .unit-suffix select {
    border-top-left-radius    : 0;
    border-bottom-left-radius : 0;
}

.ff-form-unit-group *:not(.unit-prefix):not(.unit-suffix) { border-radius: 0 !important; }



//  CHECKBOX  =================================================================
//  The grey square
.ff-checkbox label::before {
    height        : 16px;
    width         : 16px;
    top           : 4px;
    left          : 0;
    border-radius : 4px;
}

//  The white tick inside
.ff-checkbox label::after {
    height        : 6px;
    width         : 12px;
    left          : 2px;
    top           : 8px;
    border-left   : 2px solid $colorWhite;
    border-bottom : 2px solid $colorWhite;
    transform     : rotate(-45deg);
}


//  TOGGLE SWITCH  ============================================================
//  The grey oblong
.ff-switch label::before {
    position      : absolute;
    top           : 4px;
    left          : 0;
    width         : 32px;
    height        : 16px;
    border-radius : 8px;
    margin-right  : 4px;
}

//  The white inner circle
.ff-switch label::after {
    position      : absolute;
    display       : inline-block;
    width         : 12px;
    height        : 12px;
    left          : 2px;
    top           : 6px;
    background    : $colorWhite;
    border-radius : 50%;
    content       : '';
    transition    : all 0.1s ease-out;
    box-shadow    : 0 4px 8px -4px hsla(0, 0, 0, 0.6);
}

.ff-switch input[type="checkbox"]:checked + label::after { left : 18px; }


//  RADIO-BUTTONS  ============================================================
//  The grey outer circle
.ff-radio label::before {
    width         : 16px;
    height        : 16px;
    top           : 4px;
    left          : 0;
    border-radius : 50%;
}

//  The white inner circle
.ff-radio label::after {
    opacity       : 0;
    left          : 4px;
    top           : 8px;
    width         : 8px;
    height        : 8px;
    background    : $colorWhite;
    border-radius : 50%;
}



//  CHECKBOX, SWITCH and RADIO BUTTONS  =======================================
input[type="checkbox"],
input[type="radio"] { display : none; }

.ff-checkbox,
.ff-switch,
.ff-radio {
    display      : inline-block;
    margin-right : 24px;
}

.ff-checkbox:only-of-type,
.ff-switch:only-of-type,
.ff-radio:only-of-type { margin-right : 0; }

.ff-checkbox label,
.ff-switch   label,
.ff-radio    label {
    display        : inline-block;
    position       : relative;
    font-family    : $fontSans;
    color          : $colorShade;
    cursor         : pointer;
    vertical-align : middle;
    line-height    : 1.1;
}

.ff-checkbox label,
.ff-radio    label { padding-left : 24px; }

.ff-switch   label { padding-left : 40px; }

.ff-checkbox label::before,
.ff-checkbox label::after,
.ff-switch   label::before,
.ff-switch   label::after,
.ff-radio    label::before,
.ff-radio    label::after {
    display    : inline-block;
    position   : absolute;
    content    : "";
    transition : all 0.1s ease-out;
}

//  The grey square
.ff-checkbox input[type="checkbox"]:disabled + label::before,
.ff-switch   input[type="checkbox"]:disabled + label::before,
.ff-radio    input[type="radio"]:disabled    + label::before,
.ff-checkbox label::before,
.ff-switch   label::before,
.ff-radio    label::before {
    user-select    : none;
    pointer-events : none;
    background     : $colorGrey-20;
    box-shadow     : 0 2px 8px -2px hsla(0, 0, 0, 0.24) inset;
}

.ff-checkbox:hover label::before,
.ff-switch:hover   label::before,
.ff-radio:hover    label::before { background : $colorGrey-30; }

//  The grey square
.ff-checkbox label::after,
.ff-radio    label::after { opacity : 0; }

.ff-checkbox input[type="checkbox"]:checked + label::before,
.ff-switch   input[type="checkbox"]:checked + label::before,
.ff-radio    input[type="radio"]:checked    + label::before { background : $colorHue; }

.ff-checkbox input[type="checkbox"]:checked + label::after,
.ff-radio    input[type="radio"]:checked    + label::after { opacity : 1; }

.ff-checkbox input[type="checkbox"]:disabled         + label,
.ff-switch   input[type="checkbox"]:disabled         + label,
.ff-radio    input[type="radio"]:disabled            + label,
.ff-checkbox input[type="checkbox"]:disabled:checked + label,
.ff-switch   input[type="checkbox"]:disabled:checked + label,
.ff-radio    input[type="radio"]:disabled:checked    + label  {
    pointer-events : none;
    cursor         : default;
    opacity        : 0.24;
}




//  SELECT DROPDOWN  ==========================================================
.ff-select {
    position : relative;
    width    : max-content;
}

.ff-select select {
    display          : flex;
    height           : 100%;
    padding          : 8px 48px 8px 8px;
    background-color : $inputBGColor;
    border           : none;
    border-radius    : 4px;
    font-family      : $fontSans;
    align-items      : center;
}

.ff-select::after {
    position       : absolute;
    display        : block;
    content        : "\2303";
    top            : calc(50% - 18px);
    right          : 12px;
    font-size      : 24px;
    color          : $colorHue;
    line-height    : 1.2;
    border-color   : $colorHue;
    z-index        : 500;
    pointer-events : none;
    transform      : rotate(180deg);
}



//  PROGRESS BAR  =============================================================
.ff-progress {
    display        : flex;
    flex-wrap      : wrap;
    flex-direction : row;
    width: 100%;
}

.ff-progress-title {
    margin-bottom : 8px;
    font-weight   : bold;
    flex          : 0 1 50%;
}

.ff-progress-value {
    text-align    : right;
    margin-bottom : 8px;
    flex          : 0 1 50%;
}

progress.ff-progress-bar[value] {
    position      : relative;
    flex          : 1 1 100%;
    height        : 16px;
    border-radius : 8000px;
    background    : $progressBarBG;
    box-shadow    : 0 2px 8px -2px hsla(0, 0, 0, 0.24) inset;
}

progress.ff-progress-bar[value]::-webkit-progress-bar {
    border-radius      : 8000px;
    background         : $progressBarBG;
    box-shadow         : 0 2px 8px -2px hsla(0, 0, 0, 0.24) inset;
}

progress.ff-progress-bar::-webkit-progress-value {
    border-radius      : 8000px;
    background         : $progressBarFill;
}

progress.ff-progress-bar[value]::-moz-progress-bar {
    border-radius : 8000px;
    background    : $progressBarFill;
}



//  RANGE SLIDER  =============================================================
.range-slider { width : 100%; }

.slider-range {
    -webkit-appearance : none;
    -moz-appearance    : none;
    appearance         : none;
    width              : 100%;
    height             : 10px;
    border-radius      : 5px;
    background         : $colorGrey-10;
    box-shadow         : 0 2px 8px -2px hsla(0, 0, 0, 0.24) inset;
    outline            : none;
    padding            : 0;
    margin             : 0;
}

.slider-range::-webkit-slider-thumb {
    -webkit-appearance : none;
    -moz-appearance    : none;
    appearance         : none;
    width              : 20px;
    height             : 20px;
    border-radius      : 50%;
    background         : #2c3e50;
    cursor             : pointer;
    -webkit-transition : background .15s ease-in-out;
    transition         : background .15s ease-in-out;
}

.slider-range::-webkit-slider-thumb:hover { background : #1abc9c; }

.slider-range:active::-webkit-slider-thumb { background : #1abc9c; }

.slider-range::-moz-range-thumb {
    width              : 20px;
    height             : 20px;
    border             : 0;
    border-radius      : 50%;
    background         : #2c3e50;
    cursor             : pointer;
    -webkit-transition : background .15s ease-in-out;
    transition         : background .15s ease-in-out;
}

.slider-range::-moz-range-thumb:hover { background : #1abc9c; }

.slider-range:active::-moz-range-thumb { background : #1abc9c; }

::-moz-range-track {
    border     : 0;
    background : rgba(0,0,0,0);
}

input::-moz-focus-inner,
input::-moz-focus-outer { border : 0; }



//  BUTTON  ===================================================================
button,
.ff-button {
    position            : relative;
    display             : inline-flex;
    cursor              : pointer;
    padding             : 12px 24px;
    font-family         : $fontSans;
    font-weight         : bold;
    font-size           : 88%;
    text-align          : center;
    text-decoration     : none;
    line-height         : 1;
    transition          : all 0.2s;
    background-position : center;
}

button:active,
.ff-button:active {
    box-shadow : none;
    opacity    : 0.72;
}

//  Button with a multi-colour background
button.bg-gradient,
.ff-button.bg-gradient {
    background  : -webkit-linear-gradient(-45deg, $buttonGradientStartColour 0%, $buttonGradientEndColour 100%);
    background  :    -moz-linear-gradient(-45deg, $buttonGradientStartColour 0%, $buttonGradientEndColour 100%);
    background  :         linear-gradient(135deg, $buttonGradientStartColour 0%, $buttonGradientEndColour 100%);
}

//  A round button
button.shape-circular,
.ff-button.shape-circular {
    width         : 64px;
    height        : 64px;
    padding       : 0;
    border-radius : 50%;
}

button.shape-circular img,
.ff-button.shape-circular img {
    position : absolute;
    margin   : auto;
    left     : 0;
    top      : 0;
    bottom   : 0;
    right    : 0;
}

.with-loader {
    color          : transparent !important;
    box-shadow     : none;
    user-select    : none;
    pointer-events : none;
}
.with-loader::after {
    display            : block;
    position           : absolute;
    margin             : auto;
    left               : 0;
    top                : 0;
    bottom             : 0;
    right              : 0;
    height             : 16px;
    width              : 16px;
    border             : 3px solid $spinnerBorder;
    border-radius      : 50%;
    border-top-color   : transparent;
    border-right-color : transparent;
    content            : "";
    -webkit-animation  : spinner 400ms infinite linear;
            animation  : spinner 400ms infinite linear;
}

.size-tiny.with-loader::after,
.size-small.with-loader::after {
    display            : block;
    position           : absolute;
    margin             : auto;
    left               : 0;
    top                : 0;
    bottom             : 0;
    right              : 0;
    height             : 8px;
    width              : 8px;
    border             : 2px solid $colorWhite;
    border-radius      : 50%;
    border-top-color   : transparent;
    border-right-color : transparent;
    content            : "";
    -webkit-animation  : spinner 400ms infinite linear;
            animation  : spinner 400ms infinite linear;
}

// Animation for loader
@-webkit-keyframes spinner {
    from { -webkit-transform: rotate(0deg); }
    to   { -webkit-transform: rotate(359deg); }
}
@keyframes spinner {
    from { transform: rotate(0deg); }
    to   { transform: rotate(359deg); }
}

button[disabled],
.ff-button[disabled] {
    box-shadow     : none;
    user-select    : none;
    pointer-events : none;
    opacity        : 0.32;
    filter         : grayscale(100%);
}

// Different sized buttons
button.size-tiny,
.ff-button.size-tiny {
    padding   : 4px 8px;
    font-size : $baseFontSize*pow($scaleFactor, -2);
}

button.size-small,
.ff-button.size-small {
    padding   : 8px 16px;
    font-size : $baseFontSize*pow($scaleFactor, -1);
}

button.size-large,
.ff-button.size-large {
    padding   : 16px 32px;
    font-size : $baseFontSize*pow($scaleFactor, 2);
}

button.size-huge,
.ff-button.size-huge {
    padding   : 24px 40px;
    font-size : $baseFontSize*pow($scaleFactor, 4);
}

button.button-plain,
.ff-button.button-plain { background : transparent; }

.with-delete::after {
    display     : inline-flex;
    position    : absolute;
    cursor      : pointer;
    right       : 8px;
    content     : "\00d7";
    font-size   : 20px;
    line-height : 0;
    align-self: center;
}

button.with-delete,
.ff-button.with-delete,
button.size-tiny.with-delete,
.ff-button.size-tiny.with-delete,
button.size-small.with-delete
.ff-button.size-small.with-delete { padding-right : 32px !important; }

.ff-button.size-large.with-delete { padding-right : 40px !important; }

.ff-button.size-huge.with-delete  { padding-right : 48px !important; }

.ff-button.size-large.with-delete::after,
.ff-button.size-huge.with-delete::after { font-size : 24px; right: 16px; }

button + button,
.ff-button + .ff-button { margin-right : 8px; }

button + button:nth-child(2),
.ff-button + .ff-button:nth-child(2) { margin-left : 8px; }